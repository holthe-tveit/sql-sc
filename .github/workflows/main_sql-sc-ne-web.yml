# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - sql-sc-ne-web

on:
  push:
    branches:
    - 'main'
    paths:
      - 'sql/**'
      - 'SQLSC.Web/**'
      - '.github\workflows\**'
  pull_request:
    paths:
    - 'sql/**'
    - 'SQLSC.Web/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build SQLSC.Web/SQLSC.Web.csproj  --configuration Release

      - name: dotnet publish
        run: dotnet publish SQLSC.Web/SQLSC.Web.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy migrations to Azure SQL
        uses: actions/checkout@v2 # Required to mount the Github Workspace to a volume 
      - run: docker run -v ${PWD}/sql:/flyway/sql --rm flyway/flyway -url="${{secrets.PROD_DB_CONNECTION}}" migrate

      -  run: |
                Install-Module -Name SqlServer -Scope CurrentUser -Confirm
                Import-Module SqlServer
                Invoke-Sqlcmd -Query "exec tSQLt.RunAll" -ConnectionString "${{secrets.FLYWAY_DB_CONNECTION}}" -OutputAs DataSet -verbose -AbortOnError *> tSqlTestResult.txt
                
      - name: Upload tsql artifact
        uses: actions/upload-artifact@v2
        with:
          name: TSQL Test Result
          path: ${{ github.workspace }}/tSqlTestResult.txt  


      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'sql-sc-ne-web'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_CFF3E4CD16DB46C094E0E306D9EA4C84 }}
          package: .
